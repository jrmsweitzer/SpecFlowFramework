// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.34014
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SpecFlowFramework.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("Cart Total", Description="As a shopper\r\nI want to see my cart total on every screen\r\nSo I don\'t have to lea" +
        "ve my current page to verify it\'s contents", SourceFile="Features\\CartTotal.feature", SourceLine=0)]
    public partial class CartTotalFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CartTotal.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Cart Total", "As a shopper\r\nI want to see my cart total on every screen\r\nSo I don\'t have to lea" +
                    "ve my current page to verify it\'s contents", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
 testRunner.Given("I am at url \"http://store.demoqa.com/\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Empty Cart", new string[] {
                "ecommerce"}, SourceLine=9)]
        public virtual void EmptyCart()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Empty Cart", new string[] {
                        "ecommerce"});
#line 10
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 11
 testRunner.Then("My cart should have a total of 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Add an item", new string[] {
                "ecommerce"}, SourceLine=14)]
        public virtual void AddAnItem()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add an item", new string[] {
                        "ecommerce"});
#line 15
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 16
 testRunner.When("I click link with exact text \"All Product\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 17
 testRunner.And("I Add To Cart", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
 testRunner.And("I Continue Shopping", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
 testRunner.Then("My cart should have a total of 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Add same item twice, separately", new string[] {
                "ecommerce"}, SourceLine=22)]
        public virtual void AddSameItemTwiceSeparately()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add same item twice, separately", new string[] {
                        "ecommerce"});
#line 23
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 24
 testRunner.When("I click link with exact text \"All Product\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 25
 testRunner.And("I Add To Cart", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
 testRunner.And("I Continue Shopping", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
 testRunner.And("I Add To Cart", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
 testRunner.And("I Continue Shopping", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
 testRunner.Then("My cart should have a total of 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Add two separate items", new string[] {
                "ecommerce"}, SourceLine=32)]
        public virtual void AddTwoSeparateItems()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add two separate items", new string[] {
                        "ecommerce"});
#line 33
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 34
 testRunner.When("I click link with exact text \"All Product\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 35
 testRunner.And("I Add To Cart", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
 testRunner.And("I Continue Shopping", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
 testRunner.And("I click link with exact text \"Home\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
 testRunner.And("I click link with exact text \"Buy Now\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
 testRunner.And("I Add To Cart", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.And("I Continue Shopping", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
 testRunner.Then("My cart should have a total of 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Variable test", new string[] {
                "ecommerce"}, SourceLine=44)]
        public virtual void VariableTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Variable test", new string[] {
                        "ecommerce"});
#line 45
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 46
 testRunner.When("I click link with exact text \"All Product\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 48
 testRunner.And("I store text of Product Title into Product 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
 testRunner.Then("Variable Product 1 should be \"iPhone 5\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 50
 testRunner.When("I store text of Product Price into Product 1 Price", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 51
 testRunner.Then("Variable Product 1 Price should be \"$12.00\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 53
 testRunner.When("I Add To Cart", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 54
 testRunner.And("I Go To Checkout", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
 testRunner.Then("Product 1 should exist in Table Product Checkout Table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 57
 testRunner.When("I store row number containing Product 1 from Table Product Checkout Table into Pr" +
                    "oduct 1 Row", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 58
 testRunner.Then("The text of Table Product Checkout Table Row Product 1 Row Column 4 should be Pro" +
                    "duct 1 Price", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 60
 testRunner.When("I continue checkout", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 61
 testRunner.Then("Text of Item Cost should be Product 1 Price", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 62
 testRunner.When("I fill out the user form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 63
 testRunner.And("I click on Purchase", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 65
 testRunner.Then("Table Purchase Results Table should have 1 rows", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 66
 testRunner.And("Product 1 should exist in Table Purchase Results Table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 67
 testRunner.And("The text of Table Purchase Results Table Row 1 Column 2 should be Product 1 Price" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void SearchForProduct(string @case, string product, string price, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ecommerce"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search For Product", @__tags);
#line 71
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 72
 testRunner.When(string.Format("I input \"{0}\" into Search Bar", product), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 73
 testRunner.And("Submit Search Bar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
 testRunner.Then(string.Format("Text of Prod Title should be {0}", product), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 76
 testRunner.And(string.Format("Text of Current Price should be {0}", price), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
 testRunner.When("I Add To Cart", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 79
 testRunner.And("I Go To Checkout", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 81
 testRunner.Then(string.Format("{0} should exist in Table Product Checkout Table", product), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 82
 testRunner.And(string.Format("The text of Table Product Checkout Table Row 2 Column 4 should be {0}", price), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 84
 testRunner.When("I continue checkout", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 85
 testRunner.Then(string.Format("Text of Item Cost should be {0}", price), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 86
 testRunner.When("I fill out the user form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 87
 testRunner.And("I click on Purchase", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 89
 testRunner.Then("Table Purchase Results Table should have 1 rows", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 90
 testRunner.And(string.Format("{0} should exist in Table Purchase Results Table", product), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 91
 testRunner.And(string.Format("The text of Table Purchase Results Table Row 1 Column 2 should be {0}", price), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Search For Product, apple TV", new string[] {
                "ecommerce",
                "source:../Outlines/DemoQAOutlines.xlsx"})]
        public virtual void SearchForProduct_AppleTV()
        {
            this.SearchForProduct("apple TV", "Apple TV", "$80.00", new string[] {
                        "source:../Outlines/DemoQAOutlines.xlsx"});
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Search For Product, mouse", new string[] {
                "ecommerce",
                "source:../Outlines/DemoQAOutlines.xlsx"})]
        public virtual void SearchForProduct_Mouse()
        {
            this.SearchForProduct("mouse", "Magic Mouse", "$150.00", new string[] {
                        "source:../Outlines/DemoQAOutlines.xlsx"});
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Search For Product, ipod", new string[] {
                "ecommerce",
                "source:../Outlines/DemoQAOutlines.xlsx"})]
        public virtual void SearchForProduct_Ipod()
        {
            this.SearchForProduct("ipod", "iPod Nano Blue", "$0.00", new string[] {
                        "source:../Outlines/DemoQAOutlines.xlsx"});
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Search For Product, headphones", new string[] {
                "ecommerce",
                "source:../Outlines/DemoQAOutlines.xlsx"})]
        public virtual void SearchForProduct_Headphones()
        {
            this.SearchForProduct("headphones", "Sennheiser RS 120", "$50.00", new string[] {
                        "source:../Outlines/DemoQAOutlines.xlsx"});
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Search For Product, Apple 27\" TV", new string[] {
                "ecommerce",
                "source:../Outlines/DemoQAOutlines.xlsx"})]
        public virtual void SearchForProduct_Apple27TV()
        {
            this.SearchForProduct("Apple 27\" TV", "Apple 27 inch Thunderbolt Display", "$764.00", new string[] {
                        "source:../Outlines/DemoQAOutlines.xlsx"});
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Search For Product, Asus 23\" TV", new string[] {
                "ecommerce",
                "source:../Outlines/DemoQAOutlines.xlsx"})]
        public virtual void SearchForProduct_Asus23TV()
        {
            this.SearchForProduct("Asus 23\" TV", "Asus MX239H 23-inch Widescreen AH", "$199.00", new string[] {
                        "source:../Outlines/DemoQAOutlines.xlsx"});
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Search For Product, Large iPod", new string[] {
                "ecommerce",
                "source:../Outlines/DemoQAOutlines.xlsx"})]
        public virtual void SearchForProduct_LargeIPod()
        {
            this.SearchForProduct("Large iPod", "Apple iPod touch Large", "$10.00", new string[] {
                        "source:../Outlines/DemoQAOutlines.xlsx"});
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Search For Product, MacBook", new string[] {
                "ecommerce",
                "source:../Outlines/DemoQAOutlines.xlsx"})]
        public virtual void SearchForProduct_MacBook()
        {
            this.SearchForProduct("MacBook", "Apple 13-inch MacBook Pro", "$864.00", new string[] {
                        "source:../Outlines/DemoQAOutlines.xlsx"});
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Remove Product from cart", new string[] {
                "ecommerce"}, SourceLine=97)]
        public virtual void RemoveProductFromCart()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Remove Product from cart", new string[] {
                        "ecommerce"});
#line 98
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 99
 testRunner.When("I click link with exact text \"All Product\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 100
 testRunner.And("I Add To Cart", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 101
 testRunner.And("I Continue Shopping", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 102
 testRunner.And("I Add To Cart", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 103
 testRunner.And("I Go To Checkout", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 104
 testRunner.Then("My cart should have a total of 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 105
 testRunner.And("The quantity for Row 1 should be 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
